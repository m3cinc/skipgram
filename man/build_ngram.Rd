% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/build_ngram.R
\name{build_ngram}
\alias{build_ngram}
\title{build_ngram}
\usage{
build_ngram(x, gramname, gramdir, elimdir, maxn = 1L, sflag = FALSE,
  cflag = FALSE, filters = NULL)
}
\arguments{
\item{x}{character list, optionaly compressed if cflag is TRUE}

\item{gramname}{name of the gram group}

\item{gramdir}{directory to save grams}

\item{elimdir}{directory to save discards}

\item{maxn}{integer, the maximum gram type (1L for unigram, 2L for bigram, etc..) to generate}

\item{sflag}{logical, set to TRUE to generate skipgrams; note skip is ignored, set to FALSE, on unigram and on nmax-gram!}

\item{cflag}{logical, set to TRUE if compressed string x is input}

\item{filters}{is an optional character vector dictionary containing tokens to exclude, omit if no filter is supplied}
}
\value{
nothing besides the grams files
}
\description{
build_ngram
}
\examples{
build_ngram(as.character(citation())) produces a unigram of citation in list x and saves it in the current directory
build_ngram(string,,,3L) builds up to trigram of string in list x no skipgrams generated
build_ngram(string,,,3L,1L,1L,badwords) builds up to trigram of string in list x corresponding to [word X X word] from a compressed list, excludes tokens in badwords character vector
}

